name: 'Terraform Workflow'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/setup-azure@v1
        with:
          azure-subscription: 'terraform-azure'

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.12.2'

  terraform:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
        working-directory: './workspaces/ubuntu/.devcontainer/my-projects/devops/infra'

      - name: Terraform Validate
        run: terraform validate
        working-directory: './workspaces/ubuntu/.devcontainer/my-projects/devops/infra'

      - name: Terraform Plan
        run: terraform plan -var="client_id=${{ secrets.client_id }}" -var="client_secret=${{ secrets.client_secret }}" -var="tenant_id=${{ secrets.tenant_id }}" -var="subscription_id=${{ secrets.subscription_id }}" -var="admin_password=${{ secrets.admin_password }}" -out=tfplan
        working-directory: './workspaces/ubuntu/.devcontainer/my-projects/devops/infra'

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: './workspaces/ubuntu/.devcontainer/my-projects/devops/infra'

  destroy:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var="client_id=${{ secrets.client_id }}" -var="client_secret=${{ secrets.client_secret }}" -var="tenant_id=${{ secrets.tenant_id }}" -var="subscription_id=${{ secrets.subscription_id }}" -var="admin_password=${{ secrets.admin_password }}"
        working-directory: './workspaces/ubuntu/.devcontainer/my-projects/devops/infra'